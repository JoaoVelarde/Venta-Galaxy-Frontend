@inject SweetAlertService Swal

<h2 class="text-uppercase mt-2 mb-5">@Titulo</h2>

<EditForm Model="Request" OnValidSubmit="OnGrabar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row justify-content-end m-0 mb-3">
        <div class="col-auto">
            <NavLink class="btn btn-outline-primary" href="productos/list">
                <i class="bi bi-x-circle me-1"></i>Cancelar
            </NavLink>
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-primary">
                <i class="bi bi-floppy me-1"></i>Guardar
            </button>
        </div>
    </div>

    <div class="row">
        <!-- Nombre -->
        <div class="col-md-6 mb-3">
            <label for="nombre" class="form-label">Nombre</label>
            <InputText class="form-control" @bind-Value="Request.Nombre" id="nombre" />
        </div>
        <!-- Descripción -->
        <div class="col-md-6 mb-3">
            <label for="descripcion" class="form-label">Descripción</label>
            <InputText class="form-control" @bind-Value="Request.Descripcion" id="descripcion" />
        </div>
    </div>

    <div class="row">
        <!-- Cantidad -->
        <div class="col-md-3 mb-3">
            <label for="cantidad" class="form-label">Cantidad</label>
            <InputNumber class="form-control" @bind-Value="Request.Cantidad" id="cantidad" step="1" />
        </div>
        <!-- Precio Venta -->
        <div class="col-md-3 mb-3">
            <label for="precioVenta" class="form-label">Precio Venta</label>
            <InputNumber class="form-control" @bind-Value="Request.PrecioVenta" id="precioVenta" step="0.01" />
        </div>
        <!-- Precio Compra -->
        <div class="col-md-3 mb-3">
            <label for="precioCompra" class="form-label">Precio Compra</label>
            <InputNumber class="form-control" @bind-Value="Request.PrecioCompra" id="precioCompra" step="0.01" />
        </div>
    </div>

    <div class="row">
        <!-- Url Imagen -->
        <div class="col-md-6 mb-3">
            <label for="url" class="form-label">URL Imagen</label>
            <InputText class="form-control" @bind-Value="Request.Url" id="url" />
        </div>
        <!-- Categoría -->
        <div class="col-md-6 mb-3">
            <label for="categoria" class="form-label">Categoría</label>
            <InputSelect id="categoria" class="form-select" @bind-Value="Request.CategoriaId">
                <option value="">--Seleccione--</option>
                @foreach (var item in Categorias)
                {
                    <option value="@item.Id">@item.Nombre</option>
                }
            </InputSelect>
        </div>
    </div>

    <div class="row">
        <!-- Previsualización de Imagen -->
        <div class="col-md-6 mb-3">
            @if (!string.IsNullOrEmpty(Request.Url))
            {
                <div class="card" style="width: 18rem;">
                    <img src="@Request.Url" class="card-img-top" alt="Imagen del Producto" style="max-width: 100%; height: auto;" />
                </div>
            }
        </div>
    </div>
</EditForm>

@code {
    [EditorRequired][Parameter] public string Titulo { get; set; } = default!;
    [EditorRequired][Parameter] public ICollection<CategoriaDtoResponse> Categorias { get; set; } = new List<CategoriaDtoResponse>();
    [EditorRequired][Parameter] public EventCallback<ProductoDtoRequest> OnGuardar { get; set; }
    [Parameter] public ProductoDtoRequest Request { get; set; } = new();
    private ProductoDtoResponse? Seleccionado { get; set; }
    private string NombreProducto { get; set; } = string.Empty;

    private async Task OnGrabar()
    {
        if (Seleccionado is not null)
            Request.Id = Seleccionado.Id;

        await OnGuardar.InvokeAsync(Request);
    }

    private void ProductoSeleccionado(ProductoDtoResponse item)
    {
        NombreProducto = item.Nombre;
        Request.Id = item.Id;
        Seleccionado = item;
    }
}
